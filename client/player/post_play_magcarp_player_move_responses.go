// Code generated by go-swagger; DO NOT EDIT.

package player

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"DatsMagic/models"
)

// PostPlayMagcarpPlayerMoveReader is a Reader for the PostPlayMagcarpPlayerMove structure.
type PostPlayMagcarpPlayerMoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPlayMagcarpPlayerMoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPlayMagcarpPlayerMoveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPlayMagcarpPlayerMoveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPlayMagcarpPlayerMoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostPlayMagcarpPlayerMoveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPlayMagcarpPlayerMoveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostPlayMagcarpPlayerMoveTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /play/magcarp/player/move] PostPlayMagcarpPlayerMove", response, response.Code())
	}
}

// NewPostPlayMagcarpPlayerMoveOK creates a PostPlayMagcarpPlayerMoveOK with default headers values
func NewPostPlayMagcarpPlayerMoveOK() *PostPlayMagcarpPlayerMoveOK {
	return &PostPlayMagcarpPlayerMoveOK{}
}

/*
PostPlayMagcarpPlayerMoveOK describes a response with status code 200, with default header values.

OK
*/
type PostPlayMagcarpPlayerMoveOK struct {
	Payload *models.ViewPlayer
}

// IsSuccess returns true when this post play magcarp player move o k response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post play magcarp player move o k response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move o k response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post play magcarp player move o k response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move o k response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post play magcarp player move o k response
func (o *PostPlayMagcarpPlayerMoveOK) Code() int {
	return 200
}

func (o *PostPlayMagcarpPlayerMoveOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveOK %s", 200, payload)
}

func (o *PostPlayMagcarpPlayerMoveOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveOK %s", 200, payload)
}

func (o *PostPlayMagcarpPlayerMoveOK) GetPayload() *models.ViewPlayer {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ViewPlayer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlayMagcarpPlayerMoveBadRequest creates a PostPlayMagcarpPlayerMoveBadRequest with default headers values
func NewPostPlayMagcarpPlayerMoveBadRequest() *PostPlayMagcarpPlayerMoveBadRequest {
	return &PostPlayMagcarpPlayerMoveBadRequest{}
}

/*
PostPlayMagcarpPlayerMoveBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPlayMagcarpPlayerMoveBadRequest struct {
	Payload *models.PuberrPubErr
}

// IsSuccess returns true when this post play magcarp player move bad request response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post play magcarp player move bad request response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move bad request response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post play magcarp player move bad request response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move bad request response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post play magcarp player move bad request response
func (o *PostPlayMagcarpPlayerMoveBadRequest) Code() int {
	return 400
}

func (o *PostPlayMagcarpPlayerMoveBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveBadRequest %s", 400, payload)
}

func (o *PostPlayMagcarpPlayerMoveBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveBadRequest %s", 400, payload)
}

func (o *PostPlayMagcarpPlayerMoveBadRequest) GetPayload() *models.PuberrPubErr {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PuberrPubErr)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlayMagcarpPlayerMoveUnauthorized creates a PostPlayMagcarpPlayerMoveUnauthorized with default headers values
func NewPostPlayMagcarpPlayerMoveUnauthorized() *PostPlayMagcarpPlayerMoveUnauthorized {
	return &PostPlayMagcarpPlayerMoveUnauthorized{}
}

/*
PostPlayMagcarpPlayerMoveUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostPlayMagcarpPlayerMoveUnauthorized struct {
	Payload *models.SwaggerErrNotAuthorized
}

// IsSuccess returns true when this post play magcarp player move unauthorized response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post play magcarp player move unauthorized response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move unauthorized response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post play magcarp player move unauthorized response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move unauthorized response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post play magcarp player move unauthorized response
func (o *PostPlayMagcarpPlayerMoveUnauthorized) Code() int {
	return 401
}

func (o *PostPlayMagcarpPlayerMoveUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveUnauthorized %s", 401, payload)
}

func (o *PostPlayMagcarpPlayerMoveUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveUnauthorized %s", 401, payload)
}

func (o *PostPlayMagcarpPlayerMoveUnauthorized) GetPayload() *models.SwaggerErrNotAuthorized {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwaggerErrNotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlayMagcarpPlayerMoveForbidden creates a PostPlayMagcarpPlayerMoveForbidden with default headers values
func NewPostPlayMagcarpPlayerMoveForbidden() *PostPlayMagcarpPlayerMoveForbidden {
	return &PostPlayMagcarpPlayerMoveForbidden{}
}

/*
PostPlayMagcarpPlayerMoveForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostPlayMagcarpPlayerMoveForbidden struct {
	Payload *models.SwaggerErrForbidden
}

// IsSuccess returns true when this post play magcarp player move forbidden response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post play magcarp player move forbidden response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move forbidden response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post play magcarp player move forbidden response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move forbidden response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post play magcarp player move forbidden response
func (o *PostPlayMagcarpPlayerMoveForbidden) Code() int {
	return 403
}

func (o *PostPlayMagcarpPlayerMoveForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveForbidden %s", 403, payload)
}

func (o *PostPlayMagcarpPlayerMoveForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveForbidden %s", 403, payload)
}

func (o *PostPlayMagcarpPlayerMoveForbidden) GetPayload() *models.SwaggerErrForbidden {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwaggerErrForbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlayMagcarpPlayerMoveNotFound creates a PostPlayMagcarpPlayerMoveNotFound with default headers values
func NewPostPlayMagcarpPlayerMoveNotFound() *PostPlayMagcarpPlayerMoveNotFound {
	return &PostPlayMagcarpPlayerMoveNotFound{}
}

/*
PostPlayMagcarpPlayerMoveNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostPlayMagcarpPlayerMoveNotFound struct {
	Payload *models.SwaggerErrNotFound
}

// IsSuccess returns true when this post play magcarp player move not found response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post play magcarp player move not found response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move not found response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post play magcarp player move not found response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move not found response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post play magcarp player move not found response
func (o *PostPlayMagcarpPlayerMoveNotFound) Code() int {
	return 404
}

func (o *PostPlayMagcarpPlayerMoveNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveNotFound %s", 404, payload)
}

func (o *PostPlayMagcarpPlayerMoveNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveNotFound %s", 404, payload)
}

func (o *PostPlayMagcarpPlayerMoveNotFound) GetPayload() *models.SwaggerErrNotFound {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwaggerErrNotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlayMagcarpPlayerMoveTooManyRequests creates a PostPlayMagcarpPlayerMoveTooManyRequests with default headers values
func NewPostPlayMagcarpPlayerMoveTooManyRequests() *PostPlayMagcarpPlayerMoveTooManyRequests {
	return &PostPlayMagcarpPlayerMoveTooManyRequests{}
}

/*
PostPlayMagcarpPlayerMoveTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type PostPlayMagcarpPlayerMoveTooManyRequests struct {
	Payload *models.SwaggerErrTooManyUserRequests
}

// IsSuccess returns true when this post play magcarp player move too many requests response has a 2xx status code
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post play magcarp player move too many requests response has a 3xx status code
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post play magcarp player move too many requests response has a 4xx status code
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post play magcarp player move too many requests response has a 5xx status code
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post play magcarp player move too many requests response a status code equal to that given
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the post play magcarp player move too many requests response
func (o *PostPlayMagcarpPlayerMoveTooManyRequests) Code() int {
	return 429
}

func (o *PostPlayMagcarpPlayerMoveTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveTooManyRequests %s", 429, payload)
}

func (o *PostPlayMagcarpPlayerMoveTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /play/magcarp/player/move][%d] postPlayMagcarpPlayerMoveTooManyRequests %s", 429, payload)
}

func (o *PostPlayMagcarpPlayerMoveTooManyRequests) GetPayload() *models.SwaggerErrTooManyUserRequests {
	return o.Payload
}

func (o *PostPlayMagcarpPlayerMoveTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwaggerErrTooManyUserRequests)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
